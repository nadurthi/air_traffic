function [X,W]=Sigma__Quadrature_points(arg1,arg2,N,type,pdf)

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
% July 2012
%Nagavenkat Adurthi
%Mechanical and Aerospace Engineering
%University at Buffalo
%email: n.adurthi@gmail.com
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%***For further information please contact the author*****

%%
%-pdf can have two values 'Gaussian' and 'Uniform'
%-type is the methods- 'UT', 'CKF', 'GH', 'GLgn'
%      'CUT', 'SGH', 'SGLgn'
% -N depends on the type: for UT N is the kappa value to be used 
% -For CKF: N has no effect
% -For GaussHermtie: N is the number of Gauss Hermite points used in
%       1-Dimension i.e. if N points are taken the rule will exactly integrate
%       all polynomials of total degree 2N-1 or less.
% -For GaussLegendre: N is the number of Gauss Legendre points used in
%       1-Dimension  i.e. if N points are taken the rule will exactly integrate
%       all polynomials of total degree 2N-1 or less.
% -For CUT: N is the order like N=2 or 4 or 6 or 8
% -For Spares grids he N value specified would mean that the resulting sparse grid quadrature 
%       can integrate all polynomials of total degree 2N-1 or less.
% -For Gaussian pdf: arg1=mean column vector abd arg2=covariance matrix
% -For Uniform pdf: arg1=lower bounds row vector abd arg2=upper bounds row
% vector
% The Output is a Matrix X with each sigma/quadrature point along the rows.
% The number of rows of X are te number of sigma/quadrature points.
%w is the column vector of weights. The lenght of w is same as the number
%of sigma/quadrature points.

%% Gaussian pdf
if strcmpi(pdf,'gaussian')==1
    mu=arg1;
    P=arg2;
    n=length(mu);
switch lower(type)
    case 'ut'
    X=[zeros(1,n);eye(n);-1*eye(n)];
    W=[N/(n+N);0.5/(n+N)*ones(2*n,1)];
    
    case 'ckf'
    X=[eye(n);-1*eye(n)];
    W=0.5/(n)*ones(2*n,1);
    
    case'cut'
    XW=cut_points_gaussian(n,N);
    X=XW(:,1:end-1);
    W=XW(:,end);
    case'gh'
    [X,W] = GH_pt(n,Np);
    case 'sgh'   
     XW=sparse_points_gaussian(n,N);
      X=XW(:,1:end-1);
      W=XW(:,end);
    otherwise 
    warning('The type does not exist')
    warning(strcat('User specified type was ',type))
    error('Check help for allowable types ')
end
% transforming the points
A=sqrtm(P);
for i=1:1:length(W)
    X(i,:)=(A*X(i,:)'+mu)';
end


end

%Uniform pdf   
if strcmpi(pdf,'uniform')==1

  bdd_low=arg1;
    bdd_up=arg2;
    n=length(bdd_low);
switch lower(type)


    case'cut'
XW=cut_points_uniform(n,N);
    X=XW(:,1:end-1);
    W=XW(:,end);
    case'glgn'
 [X,W] = GLgn_pt(n,Np);
    
    case 'sglgn'   
     XW=sparse_points_uniform(n,N);
      X=XW(:,1:end-1);
      W=XW(:,end);
    otherwise 
    warning('The type does not exist')
    warning(strcat('User specified type was ',type))
    error('Check help for allowable types ')
end
%transforming the points
mu=(bdd_low+bdd_up)/2;
h=-bdd_low+bdd_up;
for i=1:1:n
    X(:,i)=(h(i)/2)*X(:,i)+mu(i);
end

   
end
end  %end of sigma function


%% Gauss-Hermite quads  
function [X,W] = GH_pt(n,Np)
% n=length(mcent);

if Np==1
    x=1;
    w=1;
end
 
if Np==2
    x=(roots([1,0,-1]));
    B=[1,0,1]';
    A=[1,1;
      x(1),x(2);
      x(1)^2,x(2)^2];
    w=A\B;
end

if Np==3
   x=roots([1,0,-3,0]);
       B=[1,0,1,0,3]';
    A=[1,1,1;
      x(1),x(2),x(3);
      x(1)^2,x(2)^2,x(3)^2;
      x(1)^3,x(2)^3,x(3)^3;
      x(1)^4,x(2)^4,x(3)^4];
    w=A\B;
end 

if Np==4
   x=roots([1,0,-6,0,3]);
          B=[1,0,1,0,3,0,15]';
    A=[1,1,1,1;
      x(1),x(2),x(3),x(4);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6];
    w=A\B;
end 

if Np==5
   x=roots([1,0,-10,0,15,0]);
             B=[1,0,1,0,3,0,15,0,105]';
    A=[1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8];
    w=A\B;
end 

if Np==6
   x=roots([1,0,-15,0,45,0,-15]);
             B=[1,0,1,0,3,0,15,0,105,0,945]';
    A=[1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10];
    w=A\B;
end 

if Np==7
   x=roots([1,0,-21,0,105,0,-105,0]);
                B=[1,0,1,0,3,0,15,0,105,0,945,0,10395]';
    A=[1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12];
    w=A\B;
end 

if Np==8
   x=roots([1,0,-28,0,210,0,-420,0,105]);
                   B=[1,0,1,0,3,0,15,0,105,0,945,0,10395,0,135135]';
    A=[1,1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7),x(8);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2,x(8)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3,x(8)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4,x(8)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5,x(8)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6,x(8)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7,x(8)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8,x(8)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9,x(8)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10,x(8)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11,x(8)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12,x(8)^12;
      x(1)^13,x(2)^13,x(3)^13,x(4)^13,x(5)^13,x(6)^13,x(7)^13,x(8)^13;
      x(1)^14,x(2)^14,x(3)^14,x(4)^14,x(5)^14,x(6)^14,x(7)^14,x(8)^14];
    w=A\B;
end 

if Np==9
   x=roots([1,0,-36,0,378,0,-1260,0,945,0]);
   B=[1,0,1,0,3,0,15,0,105,0,945,0,10395,0,135135,0,2027025]';
       A=[1,1,1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7),x(8),x(9);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2,x(8)^2,x(9)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3,x(8)^3,x(9)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4,x(8)^4,x(9)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5,x(8)^5,x(9)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6,x(8)^6,x(9)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7,x(8)^7,x(9)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8,x(8)^8,x(9)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9,x(8)^9,x(9)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10,x(8)^10,x(9)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11,x(8)^11,x(9)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12,x(8)^12,x(9)^12;
      x(1)^13,x(2)^13,x(3)^13,x(4)^13,x(5)^13,x(6)^13,x(7)^13,x(8)^13,x(9)^13;
      x(1)^14,x(2)^14,x(3)^14,x(4)^14,x(5)^14,x(6)^14,x(7)^14,x(8)^14,x(9)^14;
      x(1)^15,x(2)^15,x(3)^15,x(4)^15,x(5)^15,x(6)^15,x(7)^15,x(8)^15,x(9)^15;
      x(1)^16,x(2)^16,x(3)^16,x(4)^16,x(5)^16,x(6)^16,x(7)^16,x(8)^16,x(9)^16];
    w=A\B;
end 

if Np==10
   x=roots([1,0,-45,0,630,0,-3150,0,4725,0,-945]);
   B=[1,0,1,0,3,0,15,0,105,0,945,0,10395,0,135135,0,2027025,0,34459425]';
       A=[1,1,1,1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7),x(8),x(9),x(10);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2,x(8)^2,x(9)^2,x(10)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3,x(8)^3,x(9)^3,x(10)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4,x(8)^4,x(9)^4,x(10)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5,x(8)^5,x(9)^5,x(10)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6,x(8)^6,x(9)^6,x(10)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7,x(8)^7,x(9)^7,x(10)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8,x(8)^8,x(9)^8,x(10)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9,x(8)^9,x(9)^9,x(10)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10,x(8)^10,x(9)^10,x(10)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11,x(8)^11,x(9)^11,x(10)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12,x(8)^12,x(9)^12,x(10)^12;
      x(1)^13,x(2)^13,x(3)^13,x(4)^13,x(5)^13,x(6)^13,x(7)^13,x(8)^13,x(9)^13,x(10)^13;
      x(1)^14,x(2)^14,x(3)^14,x(4)^14,x(5)^14,x(6)^14,x(7)^14,x(8)^14,x(9)^14,x(10)^14;
      x(1)^15,x(2)^15,x(3)^15,x(4)^15,x(5)^15,x(6)^15,x(7)^15,x(8)^15,x(9)^15,x(10)^15;
      x(1)^16,x(2)^16,x(3)^16,x(4)^16,x(5)^16,x(6)^16,x(7)^16,x(8)^16,x(9)^16,x(10)^16;
      x(1)^17,x(2)^17,x(3)^17,x(4)^17,x(5)^17,x(6)^17,x(7)^17,x(8)^17,x(9)^17,x(10)^17;
      x(1)^18,x(2)^18,x(3)^18,x(4)^18,x(5)^18,x(6)^18,x(7)^18,x(8)^18,x(9)^18,x(10)^18];
    w=A\B;
end 



%take tensor product of the points and weights
X=x;
W=w;
for i=1:1:n-1
[X,W]=tens_prod(X,x,W,w);
end
end  %GH function end

%% Gauss-Lengendre quad
function [X,W] = GLgn_pt(n,Np)


if Np==1
    x=1;
    w=1;
end
 
if Np==2
    x=(roots([3,0,-1]));
    B=[1,0,1/3]';
    A=[1,1;
      x(1),x(2);
      x(1)^2,x(2)^2];
    w=A\B;
end

if Np==3
   x=roots([5,0,-3,0]);
       B=[1,0,1/3,0,1/5]';
    A=[1,1,1;
      x(1),x(2),x(3);
      x(1)^2,x(2)^2,x(3)^2;
      x(1)^3,x(2)^3,x(3)^3;
      x(1)^4,x(2)^4,x(3)^4];
    w=A\B;
end 

if Np==4
   x=roots([35,0,-30,0,3]);
          B=[1,0,1/3,0,1/5,0,1/7]';
    A=[1,1,1,1;
      x(1),x(2),x(3),x(4);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6];
    w=A\B;
end 

if Np==5
   x=roots([63,0,-70,0,15,0]);
             B=[1,0,1/3,0,1/5,0,1/7,0,1/9]';
    A=[1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8];
    w=A\B;
end 

if Np==6
   x=roots([231,0,-315,0,105,0,-5]);
             B=[1,0,1/3,0,1/5,0,1/7,0,1/9,0,1/11]';
    A=[1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10];
    w=A\B;
end 

if Np==7
   x=roots([429,0,-693,0,315,0,-35,0]);
                B=[1,0,1/3,0,1/5,0,1/7,0,1/9,0,1/11,0,1/13]';
    A=[1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12];
    w=A\B;
end 

if Np==8
   x=roots([6435,0,-12012,0,6930,0,-1260,0,35]);
                   B=[1,0,1/3,0,1/5,0,1/7,0,1/9,0,1/11,0,1/13,0,1/15]';
    A=[1,1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7),x(8);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2,x(8)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3,x(8)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4,x(8)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5,x(8)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6,x(8)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7,x(8)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8,x(8)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9,x(8)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10,x(8)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11,x(8)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12,x(8)^12;
      x(1)^13,x(2)^13,x(3)^13,x(4)^13,x(5)^13,x(6)^13,x(7)^13,x(8)^13;
      x(1)^14,x(2)^14,x(3)^14,x(4)^14,x(5)^14,x(6)^14,x(7)^14,x(8)^14];
    w=A\B;
end 

if Np==9
   x=roots([12155,0,-25740,0,18018,0,-4620,0,315,0]);
                      B=[1,0,1/3,0,1/5,0,1/7,0,1/9,0,1/11,0,1/13,0,1/15,0,1/17]';
    A=[1,1,1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7),x(8),x(9);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2,x(8)^2,x(9)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3,x(8)^3,x(9)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4,x(8)^4,x(9)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5,x(8)^5,x(9)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6,x(8)^6,x(9)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7,x(8)^7,x(9)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8,x(8)^8,x(9)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9,x(8)^9,x(9)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10,x(8)^10,x(9)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11,x(8)^11,x(9)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12,x(8)^12,x(9)^12;
      x(1)^13,x(2)^13,x(3)^13,x(4)^13,x(5)^13,x(6)^13,x(7)^13,x(8)^13,x(9)^13;
      x(1)^14,x(2)^14,x(3)^14,x(4)^14,x(5)^14,x(6)^14,x(7)^14,x(8)^14,x(9)^14;
      x(1)^15,x(2)^15,x(3)^15,x(4)^15,x(5)^15,x(6)^15,x(7)^15,x(8)^15,x(9)^15;
      x(1)^16,x(2)^16,x(3)^16,x(4)^16,x(5)^16,x(6)^16,x(7)^16,x(8)^16,x(9)^16];
    w=A\B;
end 

if Np==10
   x=roots([46189,0,-109395,0,90090,0,-30030,0,3465,0,-63]);
                      B=[1,0,1/3,0,1/5,0,1/7,0,1/9,0,1/11,0,1/13,0,1/15,0,1/17,0,1/19]';
    A=[1,1,1,1,1,1,1,1,1,1;
      x(1),x(2),x(3),x(4),x(5),x(6),x(7),x(8),x(9),x(10);
      x(1)^2,x(2)^2,x(3)^2,x(4)^2,x(5)^2,x(6)^2,x(7)^2,x(8)^2,x(9)^2,x(10)^2;
      x(1)^3,x(2)^3,x(3)^3,x(4)^3,x(5)^3,x(6)^3,x(7)^3,x(8)^3,x(9)^3,x(10)^3;
      x(1)^4,x(2)^4,x(3)^4,x(4)^4,x(5)^4,x(6)^4,x(7)^4,x(8)^4,x(9)^4,x(10)^4;
      x(1)^5,x(2)^5,x(3)^5,x(4)^5,x(5)^5,x(6)^5,x(7)^5,x(8)^5,x(9)^5,x(10)^5;
      x(1)^6,x(2)^6,x(3)^6,x(4)^6,x(5)^6,x(6)^6,x(7)^6,x(8)^6,x(9)^6,x(10)^6;
      x(1)^7,x(2)^7,x(3)^7,x(4)^7,x(5)^7,x(6)^7,x(7)^7,x(8)^7,x(9)^7,x(10)^7;
      x(1)^8,x(2)^8,x(3)^8,x(4)^8,x(5)^8,x(6)^8,x(7)^8,x(8)^8,x(9)^8,x(10)^8;
      x(1)^9,x(2)^9,x(3)^9,x(4)^9,x(5)^9,x(6)^9,x(7)^9,x(8)^9,x(9)^9,x(10)^9;
      x(1)^10,x(2)^10,x(3)^10,x(4)^10,x(5)^10,x(6)^10,x(7)^10,x(8)^10,x(9)^10,x(10)^10;
      x(1)^11,x(2)^11,x(3)^11,x(4)^11,x(5)^11,x(6)^11,x(7)^11,x(8)^11,x(9)^11,x(10)^11;
      x(1)^12,x(2)^12,x(3)^12,x(4)^12,x(5)^12,x(6)^12,x(7)^12,x(8)^12,x(9)^12,x(10)^12;
      x(1)^13,x(2)^13,x(3)^13,x(4)^13,x(5)^13,x(6)^13,x(7)^13,x(8)^13,x(9)^13,x(10)^13;
      x(1)^14,x(2)^14,x(3)^14,x(4)^14,x(5)^14,x(6)^14,x(7)^14,x(8)^14,x(9)^14,x(10)^14;
      x(1)^15,x(2)^15,x(3)^15,x(4)^15,x(5)^15,x(6)^15,x(7)^15,x(8)^15,x(9)^15,x(10)^15;
      x(1)^16,x(2)^16,x(3)^16,x(4)^16,x(5)^16,x(6)^16,x(7)^16,x(8)^16,x(9)^16,x(10)^16;
      x(1)^17,x(2)^17,x(3)^17,x(4)^17,x(5)^17,x(6)^17,x(7)^17,x(8)^17,x(9)^17,x(10)^17;
      x(1)^18,x(2)^18,x(3)^18,x(4)^18,x(5)^18,x(6)^18,x(7)^18,x(8)^18,x(9)^18,x(10)^18];
    w=A\B;
end 



% take tensor product of the points and weights
X=x;
W=w;
for i=1:1:n-1
[X,W]=tens_prod_vec(X,x,W,w);
end
end
%% function to generate tensor product
function [T,W]=tens_prod(u,v,wu,wv)
% 1 enitity is one row of any matrix u or v
% the rows of u are tensors producted with rows of v

n=size(u,1);
m=size(v,1);
T=[];
W=[];
for i=1:1:n
    T=vertcat(T,horzcat(repmat(u(i,:),m,1),v));
    W=vertcat(W,horzcat(repmat(wu(i),m,1),wv));
end
W=prod(W,2);
end %tens prod function end




